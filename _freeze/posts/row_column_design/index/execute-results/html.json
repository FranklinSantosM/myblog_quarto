{
  "hash": "c72bbb79078dec6ad96843687d19eeec",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Enhancing Plant Breeding Precision with Row-Column Design\"\ndescription: |\n  Row-column design involves arranging experimental units into a grid of rows and columns.\ncategories: [Row-Column, Experimental Design, Plant Breeding]\nauthor:\n  - name: Franklin Santos\n    url: https://www.franklinsantosm.com\n    affiliation: Universidad Austral de Chile\n    orcid: 0000-0002-7509-2910\n    email: franklin25santos@gmail.com\ndate: \"2024-05-26\"\nimage: fs.png\ncitation: true\neditor_options: \n  chunk_output_type: console\n---\n\n```{=html}\n<style>\nbody {\ntext-align: justify}\n</style>\n```\n\n\n## Introduction\n\nIn the realm of agricultural research, particularly plant breeding, precision is paramount. The quest to identify superior plant varieties requires experiments that can accurately attribute observed differences to genetic factors rather than environmental noise. This is where the **row-column design** comes into play, a sophisticated statistical methodology designed to enhance the reliability of field trials by controlling spatial variation.\n\n## What is Row-Column Design?\n\nAt its core, a row-column design involves arranging experimental units into a grid of rows and columns. This organization allows researchers to control two sources of spatial variation simultaneously. Each cell in the grid, or plot, hosts a specific genotype (or treatment), which is randomly assigned to ensure unbiased results.\n\n## Why is it Important?\n\nField trials often face the challenge of spatial heterogeneityâ€”variations in soil fertility, moisture, sunlight, and other environmental conditions. These variations can introduce significant noise into the data, potentially obscuring true genetic differences. By accounting for variations along both rows and columns, the row-column design mitigates these effects, leading to more precise and reliable experimental outcomes.\n\n## Key Features\n\n1. **Grid Layout**: The field is divided into a systematic grid, creating rows and columns that structure the experimental units.\n2. **Randomization**: Treatments are randomly assigned to each plot within the grid, minimizing bias.\n3. **Control of Variation**: \n   - **Row Effects**: Horizontal variations such as soil fertility gradients or irrigation patterns.\n   - **Column Effects**: Vertical variations such as different drainage conditions or sunlight exposure.\n\n## Advantages of Row-Column Design\n\n- **Increased Precision**: By controlling for two dimensions of variability, this design reduces experimental error, enhancing the accuracy of genotype evaluations.\n- **Flexibility**: Adaptable to fields with irregular shapes or non-uniform conditions, making it versatile for various agricultural scenarios.\n- **Improved Accuracy**: Better control of environmental variation ensures that performance differences are more accurately attributed to genetic factors.\n\n## Row-Column Design with FielDHub R Package\n\nTo facilitate the implementation and analysis of row-column designs, researchers can utilize the **FieldHUB R package**. FieldHUB is a powerful tool specifically developed for managing and analyzing field trial data. It provides a user-friendly interface and a suite of functions tailored to the unique needs of agricultural experiments.\n\n- **Design Creation**: FieldHUB allows researchers to easily set up row-column designs, specifying the number of rows and columns, and randomizing the assignment of treatments.\n- **Data Management**: The package streamlines data entry and management, ensuring that all experimental data are accurately recorded and organized.\n- **Visualization**: FieldHUB offers various visualization tools to help researchers understand spatial patterns and variations within their trials, aiding in the interpretation of results.\n- **Statistical Analysis**: Integrated with R's robust statistical capabilities, FieldHUB can perform complex analyses, including mixed models and ANOVA, tailored to row-column designs.\n\nBy leveraging the FieldHUB R package, researchers can enhance the efficiency and accuracy of their field trials, making the row-column design more accessible and practical for large-scale agricultural research.\n\n### Using the FielDHub function: `row_column()`\n\nFirst, you need to load the `FielDHub` package by typing\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Install and load FielDHub package\nlibrary(FielDHub)\n```\n:::\n\n\nThen, you can enter the information describing the above design like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrcd <- row_column(\n  t = 45,\n  nrows = 5,\n  r = 3,\n  l = 1, \n  plotNumber = 101, \n  locationNames = \"FARGO\",\n  seed = 1244\n)\n```\n:::\n\n\nThe description for the inputs that we used to generate the design,\n\n- `t = 45` is the number of treatments.\n- `nrows = 5` is the number of rows.\n- `r=3` is the number of reps\n- `l = 1` is the number of locations.\n- `plotNumber = 101` is the starting plot number.\n- `locationNames = \"FARGO\"` is an optional name for each location.\n- `seed = 1244` is the random seed to replicate identical randomizations.\n\nTo print a summary of the information that is in the object `rcd`, we can use the generic function `print()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(rcd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResolvable Row-Column Design (Two-Step Optimization) \n\nEfficiency of design: \n   Level Blocks D-Efficiency A-Efficiency   A-Bound\n1    Rep      3    1.0000000    1.0000000 1.0000000\n2    Row     15    0.8940599    0.8767433 0.8842892\n3 Column     27    0.7912130    0.7623893 0.7674419\n\nInformation on the design parameters: \nList of 7\n $ rows          : num 5\n $ columns       : num 9\n $ reps          : num 3\n $ treatments    : num 45\n $ locations     : num 1\n $ location_names: chr \"FARGO\"\n $ seed          : num 1244\n\n 10 First observations of the data frame with the row_column field book: \n   ID LOCATION PLOT REP ROW COLUMN ENTRY TREATMENT\n1   1    FARGO  101   1   1      1    30      G-30\n6   2    FARGO  102   1   1      2    41      G-41\n11  3    FARGO  103   1   1      3     5       G-5\n16  4    FARGO  104   1   1      4    39      G-39\n21  5    FARGO  105   1   1      5    22      G-22\n26  6    FARGO  106   1   1      6    44      G-44\n31  7    FARGO  107   1   1      7     9       G-9\n36  8    FARGO  108   1   1      8    36      G-36\n41  9    FARGO  109   1   1      9    11      G-11\n2  10    FARGO  110   1   2      1     6       G-6\n```\n\n\n:::\n:::\n\n\nThe `row_column()` function returns a list consisting of all the information displayed in the output tabs in the FielDHub app: design information, plot layout, plot numbering, entries list, and field book. These are accessible by the `$` operator, i.e. `rcd$layoutRandom` or `rcd$fieldBook`.\n\n`rcd$fieldBook` is a list containing information about every plot in the field, with information about the location of the plot and the treatment in each plot. As seen in the output below, the field book has columns for `ID`, `LOCATION`, `PLOT`, `REP`, `ROW`, `COLUMN`, `ENTRY`, and `TREATMENT`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfield_book <- rcd$fieldBook\nhead(rcd$fieldBook, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ID LOCATION PLOT REP ROW COLUMN ENTRY TREATMENT\n1   1    FARGO  101   1   1      1    30      G-30\n6   2    FARGO  102   1   1      2    41      G-41\n11  3    FARGO  103   1   1      3     5       G-5\n16  4    FARGO  104   1   1      4    39      G-39\n21  5    FARGO  105   1   1      5    22      G-22\n26  6    FARGO  106   1   1      6    44      G-44\n31  7    FARGO  107   1   1      7     9       G-9\n36  8    FARGO  108   1   1      8    36      G-36\n41  9    FARGO  109   1   1      9    11      G-11\n2  10    FARGO  110   1   2      1     6       G-6\n```\n\n\n:::\n:::\n\n\nFor plotting the layout in function of the coordinates `ROW` and `COLUMN`, you can use the the generic function `plot()` as follows,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(rcd)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Analytical Techniques\n\nThe data from `row-column designs` are typically analyzed using mixed models or ANOVA, with row and column effects included as factors. Advanced statistical software like R (using packages such as `lme4`, `asreml`, `SpAtS`, and `statgenSTA`) and SAS provides robust tools for handling the complex data structures generated by these designs.\n\n\n\n## Conclusion\n\nRow-column design stands as a critical tool for plant breeders, ensuring that the evaluation of new plant genotypes is as accurate and reliable as possible. By effectively controlling spatial variation in field trials, this design not only improves the precision of experimental results but also aids in the selection and development of superior plant varieties. As agriculture continues to evolve, methodologies like the row-column design will remain essential in advancing our understanding and cultivation of crops.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}