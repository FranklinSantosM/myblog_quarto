{
  "hash": "2a2b7dd402400f3fcff999fe4f7d4ddc",
  "result": {
    "markdown": "---\ntitle: \"The corrr package in R: A powerful tool for exploring correlations\"\ndescription: |\n  It is a tool for exploring correlations, and it makes it possible to easily perform routine tasks when exploring correlation matrices.\ncategories: [correlation, corrr package, correlation plot]\nauthor:\n  - name: Franklin Santos\n    url: https://franklinsantosm.com\n    affiliation: AgriTech Bolivia\n    orcid: 0000-0002-7509-2910\n    email: franklin25santos@gmail.com\ndate: \"2023-09-20\"\nimage: cor.png\ncitation: true\neditor_options: \n  chunk_output_type: console\n---\n\n```{=html}\n<style>\nbody {\ntext-align: justify}\n</style>\n```\n\n\n## Introduction\n\nCorrelations are a fundamental tool for data analysis, and they can be used to measure the strength and direction of the relationship between two variables. The corrr package in R is a powerful tool for exploring correlations, and it makes it possible to easily perform routine tasks when exploring correlation matrices, such as:\n\n* Ignoring the diagonal\n* Focusing on the correlations of certain variables against others\n* Rearranging and visualizing the matrix in terms of the strength of the correlations\n\nThe corrr package also provides a number of functions for working with correlation data frames, including:\n\n* Filtering and sorting\n* Computing descriptive statistics\n* Creating plots\n\n## Body\n\nThis blog post will provide an overview of how to use the `corrr package` in R to explore correlations. We will cover the following topics:\n\n* Installing and loading the corrr package\n* Creating a correlation data frame\n* Filtering and sorting the correlation data frame\n* Computing descriptive statistics for the correlation data frame\n* Creating plots of the correlation data frame\n\n## Conclusion\n\nThe corrr package is a powerful tool for exploring correlations in R. It is highly recommended for anyone who works with correlation data.\n\n## Example:\n\nHere is an example of how to use the corrr package to create a heatmap of the correlation matrix for the mtcars dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install the corrr package\ninstall.packages(\"corrr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the corrr package\nlibrary(tidyverse)\nlibrary(corrr)\n```\n:::\n\n\n### Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"airquality\")\nhead(airquality)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6\n```\n:::\n:::\n\n\n### Compute correlation matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres.cor = correlate(airquality)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n```\n:::\n\n```{.r .cell-code}\nres.cor\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  term      Ozone Solar.R    Wind   Temp    Month      Day\n  <chr>     <dbl>   <dbl>   <dbl>  <dbl>    <dbl>    <dbl>\n1 Ozone   NA       0.348  -0.602   0.698  0.165   -0.0132 \n2 Solar.R  0.348  NA      -0.0568  0.276 -0.0753  -0.150  \n3 Wind    -0.602  -0.0568 NA      -0.458 -0.178    0.0272 \n4 Temp     0.698   0.276  -0.458  NA      0.421   -0.131  \n5 Month    0.165  -0.0753 -0.178   0.421 NA       -0.00796\n6 Day     -0.0132 -0.150   0.0272 -0.131 -0.00796 NA      \n```\n:::\n:::\n\n`fashion()`, this function is for pleasant correlation viewing:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres.cor %>%\n  fashion()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     term Ozone Solar.R Wind Temp Month  Day\n1   Ozone           .35 -.60  .70   .16 -.01\n2 Solar.R   .35         -.06  .28  -.08 -.15\n3    Wind  -.60    -.06      -.46  -.18  .03\n4    Temp   .70     .28 -.46        .42 -.13\n5   Month   .16    -.08 -.18  .42       -.01\n6     Day  -.01    -.15  .03 -.13  -.01     \n```\n:::\n:::\n\n\n### Create a correlation network\n\nThe R function `network_plot()` can be used to visualize and explore correlations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairquality %>%\n  correlate() %>%\n  network_plot(min_cor = 0.3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe option `min_cor` indicates the required minimum correlation value for a correlation to be plotted.\n\n**Each point reprents a variable**. Variable that are highly correlated are clustered together. The positioning of variables is handled by multidimensional scaling of the absolute values of the correlations.\n\nFor example, it can be seen from the above plot that the variables `Ozone`, `Wind` and `Temp` are clustering together (which makes sense).\n\n**Each path represents a correlation** between the two variables that it joins. Blue color represents a positive correlation, and a red color corresponds to a negative correlation.\n\nThe width and transparency of the path represent the strength of the correlation (wider and less transparent = stronger correlation).\n\nFor example, it can be seen that the positive correlation between `Ozone` and `Temp` is stronger than the positive correlation between `Ozone` and `Solar.R`.\n\n### Cleaning up the correlation network\n\nWe can clean this up by increasing the `min_cor`, thus plotting fewer correlation paths:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>%\n  correlate() %>%\n  network_plot(min_cor = .7)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}