{
  "hash": "dd786accc410d2ecc9aaf4d70b692136",
  "result": {
    "markdown": "---\ntitle: \"ggplot2: facet_wrap, facet_grid\"\ndescription: |\n  facet_grid y facet_wrap son funciones poderosas de ggplot2 que permiten dividir un gráfico en múltiples paneles según variables categóricas. Estas funciones son útiles para explorar la relación entre variables en diferentes subconjuntos de datos y ayudan a visualizar patrones y tendencias de manera más efectiva.\ncategories: [ggplot2, facet_wrap, facet_grid]\nauthor:\n  - name: Franklin Santos\n    url: https://franklinsantosm.com\n    affiliation: AgriTech Bolivia\n    orcid: 0000-0002-7509-2910\n    email: franklin25santos@gmail.com\ndate: \"2023-05-15\"\nimage: ggp.png\ncitation: true\neditor_options: \n  chunk_output_type: console\n---\n\n```{=html}\n<style>\nbody {\ntext-align: justify}\n</style>\n```\n\n\n## Introducción\n\n`ggplot2` es un paquete de visualización de datos en R que utiliza la gramática de gráficos para crear gráficos flexibles y de alta calidad. Con su sintaxis intuitiva, amplias opciones de personalización y variedad de gráficos predefinidos, `ggplot2` se ha convertido en una herramienta popular y poderosa para la visualización de datos en la comunidad de R.\n\n\n`facet_grid` y `facet_wrap` son dos funciones en el paquete `ggplot2` de R que permiten dividir un gráfico en múltiples paneles según las variables de una o varias variables categóricas. Estas funciones son especialmente útiles cuando se desea explorar la relación entre variables en diferentes subconjuntos de datos.\n\n## Facet wrap\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nmpg2 <- subset(mpg, cyl != 5 & drv %in% c(\"4\", \"f\") & class != \"2seater\")\nbase <- ggplot(mpg2, aes(displ, hwy)) + \n  geom_blank() + \n  xlab(NULL) + \n  ylab(NULL)\n\nbase + facet_wrap(~class, ncol = 3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbase + facet_wrap(~class, ncol = 3, as.table = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbase + facet_wrap(~class, nrow = 3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbase + facet_wrap(~class, nrow = 3, dir = \"v\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n\n## Facet grid\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase + facet_grid(. ~ cyl)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n-   `facet_grid()` dispone los gráficos en una cuadrícula 2D, definida por una fórmula:\n\n`. ~ a` distribuye los valores de `a` a través de las columnas. Esta dirección facilita las comparaciones de la posición y, porque las escalas verticales están alineadas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase + facet_grid(. ~ cyl)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n-   `b ~ .` reparte los valores de `b` por las filas. Esta dirección facilita la comparación de la posición x porque las escalas horizontales están alineadas. Esto la hace especialmente útil para comparar distribuciones.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase + facet_grid(drv ~ .)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n-   `b ~ a` distribuye `a` a lo largo de las columnas y `b` a lo largo de las filas. Normalmente querrás poner la variable con el mayor número de niveles en las columnas, para aprovechar la relación de aspecto de tu pantalla.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase + facet_grid(drv ~ cyl)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nPuede utilizar múltiples variables en las filas o columnas, \"sumándolas\", por ejemplo `a + b ~ c + d`. Las variables que aparecen juntas en las filas o columnas están anidadas en el sentido de que sólo las combinaciones que aparecen en los datos aparecerán en el gráfico. Las variables que se especifican en filas y columnas se cruzarán: se mostrarán todas las combinaciones, incluidas las que no aparecían en el conjunto de datos original: esto puede dar lugar a paneles vacíos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulación de datos\nset.seed(4)\nx <- runif(500)\ny <- 4 * x ^ 2 + rnorm(length(x), sd = 5)\ngrupo1 <- ifelse(x < 0.4, \"G1\", ifelse(x < 0.6, \"G2\", ifelse(x < 0.8, \"G3\", \"G4\")))\ngrupo2 <- ifelse(y < 0.5, \"A\", \"B\")\nx <- x + runif(length(x), -0.5, 0.5)\n\n# Data frame\ndf <- data.frame(x = x, y = y, grupo1 = grupo1, grupo2 = grupo2)\n\n# Matriz de gráficos\nggplot(df, aes(x = x, y = y, color = grupo1)) +\n  geom_point(show.legend = FALSE) +\n  facet_grid(grupo1 ~ grupo2, scales = \"free\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Controlando escalas \n\n\n::: {.cell}\n\n```{.r .cell-code}\neconomics_long\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,870 × 4\n   date       variable value  value01\n   <date>     <chr>    <dbl>    <dbl>\n 1 1967-07-01 pce       507. 0       \n 2 1967-08-01 pce       510. 0.000265\n 3 1967-09-01 pce       516. 0.000762\n 4 1967-10-01 pce       512. 0.000471\n 5 1967-11-01 pce       517. 0.000916\n 6 1967-12-01 pce       525. 0.00157 \n 7 1968-01-01 pce       531. 0.00207 \n 8 1968-02-01 pce       534. 0.00230 \n 9 1968-03-01 pce       544. 0.00322 \n10 1968-04-01 pce       544  0.00319 \n# ℹ 2,860 more rows\n```\n:::\n\n```{.r .cell-code}\nggplot(economics_long, aes(date, value)) + \n  geom_line() + \n  facet_wrap(~variable, scales = \"free_y\", ncol = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg2$model <- reorder(mpg2$model, mpg2$cty)\nmpg2$manufacturer <- reorder(mpg2$manufacturer, -mpg2$cty)\n\nggplot(mpg2, aes(cty, model)) + \n  geom_point() + \n  facet_grid(manufacturer ~ ., scales = \"free\", space = \"free\") +\n  theme(strip.text.y = element_text(angle = 0))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}